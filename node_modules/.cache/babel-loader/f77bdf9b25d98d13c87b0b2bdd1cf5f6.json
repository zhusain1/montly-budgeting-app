{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zulfi/react_udemy/section1/src/components/LinkBank.js\";\nimport React, { Component } from 'react';\nimport { PlaidLink } from 'react-plaid-link';\nimport { withRouter } from 'react-router-dom';\nimport api from '../apis';\nimport ListAccounts from '../functional_components/ListAccounts';\n\nclass LinkBank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.transactionData = accessToken => {\n      const url = '/TransactionDetails';\n      const req = {\n        access_token: accessToken\n      };\n      api({\n        method: 'post',\n        url: url,\n        data: req\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          accounts: res.data\n        });\n      });\n    };\n\n    this.onSuccess = (token, metadata) => {\n      console.log(token); // Call Token Exchange Endpoint\n\n      const url = '/TokenExchange';\n      const publicToken = {\n        public_token: token\n      };\n      api({\n        method: 'post',\n        url: url,\n        data: publicToken\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          accessToken: res.data.access_token\n        });\n        this.saveAccessToken(this.state.accessToken);\n        this.transactionData(res.data.access_token);\n      });\n      console.log(metadata);\n    };\n\n    this.saveAccessToken = accessToken => {\n      const url = '/updateToken';\n      const req = {\n        email: this.state.email,\n        access_token: accessToken\n      };\n      api({\n        method: 'post',\n        url: url,\n        data: req\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    var email = '';\n\n    if (typeof this.props.children.location.state === \"undefined\") {\n      this.props.history.push('/create');\n    } else {\n      email = this.props.children.location.state.email;\n      this.state = {\n        linkToken: '',\n        accounts: [],\n        accessToken: '',\n        email: email\n      };\n    }\n\n    const _url = '/LinkToken';\n    api.get(_url).then(res => {\n      this.setState({\n        linkToken: res.data.link_token\n      });\n    });\n  } // Get Transaction Data using the access token received\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plaid\",\n      children: [this.state.accounts.length < 1 && /*#__PURE__*/_jsxDEV(PlaidLink, {\n        token: this.state.linkToken,\n        onSuccess: this.onSuccess,\n        children: \"Connect to bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), this.state.accounts.length > 0 && /*#__PURE__*/_jsxDEV(ListAccounts, {\n        props: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(LinkBank);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/Zulfi/react_udemy/section1/src/components/LinkBank.js"],"names":["React","Component","PlaidLink","withRouter","api","ListAccounts","LinkBank","constructor","props","transactionData","accessToken","url","req","access_token","method","data","then","res","console","log","setState","accounts","onSuccess","token","metadata","publicToken","public_token","saveAccessToken","state","email","children","location","history","push","linkToken","get","link_token","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { PlaidLink } from 'react-plaid-link';\nimport { withRouter } from 'react-router-dom';\nimport api from '../apis';\nimport ListAccounts from '../functional_components/ListAccounts';\n\nclass LinkBank extends Component {\n\n    constructor(props){\n        super(props);\n        var email = '';\n\n        if(typeof( this.props.children.location.state) === \"undefined\"){\n            this.props.history.push('/create');\n        } else{\n            email = this.props.children.location.state.email;\n\n            this.state = {\n                linkToken:  '',\n                accounts: [],\n                accessToken: '',\n                email: email\n            };\n        }\n\n        const url = '/LinkToken'\n\n        api.get(url)\n        .then(res => {\n            this.setState({\n                linkToken: res.data.link_token\n            });\n        })\n\n    }\n\n    // Get Transaction Data using the access token received\n\n    transactionData = (accessToken) => {\n\n        const url = '/TransactionDetails'\n\n        const req = {\n            access_token : accessToken,\n        };\n\n        api({\n            method: 'post',\n            url: url,\n            data: req\n        }).then((res) => {\n            console.log(res.data);\n            this.setState({\n                accounts: res.data\n            })\n        })\n    }\n\n    onSuccess = (token, metadata) => {\n        console.log(token);\n\n        // Call Token Exchange Endpoint\n\n        const url = '/TokenExchange'\n\n        const publicToken = {\n            public_token : token\n        };\n\n        api({\n            method: 'post',\n            url: url,\n            data: publicToken\n        }).then((res) => {\n            console.log(res.data);\n\n            this.setState({\n                accessToken: res.data.access_token\n            })\n\n            this.saveAccessToken(this.state.accessToken);\n\n            this.transactionData(res.data.access_token);\n        })\n\n        console.log(metadata)\n    };\n\n    // api call to save access token to DB for a specific user\n    saveAccessToken = (accessToken) => {\n        const url = '/updateToken'\n\n        const req = {\n            email: this.state.email, \n            access_token: accessToken\n        };\n\n        api({\n            method: 'post',\n            url: url,\n            data: req\n        }).then((res) => {\n            console.log(res);\n        })\n    }\n\n    render() {\n        return (\n            <div className= \"Plaid\">\n                {this.state.accounts.length < 1 && \n                    <PlaidLink\n                    token= {this.state.linkToken}\n                    onSuccess={this.onSuccess}\n                >\n                        Connect to bank\n                </PlaidLink>\n                }\n                {this.state.accounts.length > 0 && \n                    <ListAccounts props={this.state}/>\n                }\n            </div>\n        );\n    }\n}\nexport default withRouter(LinkBank);\n"]},"metadata":{},"sourceType":"module"}