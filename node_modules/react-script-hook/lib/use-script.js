"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
function useScript(_a) {
    var src = _a.src, _b = _a.checkForExisting, checkForExisting = _b === void 0 ? false : _b, attributes = __rest(_a, ["src", "checkForExisting"]);
    var _c = react_1.useState(true), loading = _c[0], setLoading = _c[1];
    var _d = react_1.useState(null), error = _d[0], setError = _d[1];
    react_1.useEffect(function () {
        if (!isBrowser)
            return;
        if (checkForExisting) {
            var existing = document.querySelectorAll("script[src=\"" + src + "\"]");
            if (existing.length > 0) {
                setLoading(false);
                return;
            }
        }
        var scriptEl = document.createElement('script');
        scriptEl.setAttribute('src', src);
        Object.keys(attributes).forEach(function (key) {
            if (scriptEl[key] === undefined) {
                scriptEl.setAttribute(key, attributes[key]);
            }
            else {
                scriptEl[key] = attributes[key];
            }
        });
        var handleLoad = function () {
            setLoading(false);
        };
        var handleError = function (error) {
            setError(error);
        };
        scriptEl.addEventListener('load', handleLoad);
        scriptEl.addEventListener('error', handleError);
        document.body.appendChild(scriptEl);
        return function () {
            scriptEl.removeEventListener('load', handleLoad);
            scriptEl.removeEventListener('error', handleError);
        };
        // we need to ignore the attributes as they're a new object per call, so we'd never skip an effect call
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [src]);
    return [loading, error];
}
exports.default = useScript;
var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
//# sourceMappingURL=use-script.js.map