[{"/Users/Zulfi/Documents/montly-budgeting-app/src/index.js":"1","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/App.js":"2","/Users/Zulfi/Documents/montly-budgeting-app/src/components/Transactions.js":"3","/Users/Zulfi/Documents/montly-budgeting-app/src/components/Login.js":"4","/Users/Zulfi/Documents/montly-budgeting-app/src/components/Create.js":"5","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/MainCard.js":"6","/Users/Zulfi/Documents/montly-budgeting-app/src/components/LinkBank.js":"7","/Users/Zulfi/Documents/montly-budgeting-app/src/apis.js":"8","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/ListAccounts.js":"9","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Navbar.js":"10","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/LoggedInNavbar.js":"11","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Logout.js":"12","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Error.js":"13","/Users/Zulfi/Documents/montly-budgeting-app/src/components/ForgotPassword.js":"14","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Footer.js":"15","/Users/Zulfi/Documents/montly-budgeting-app/src/components/AddBank.js":"16","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/ListAccountsWrapper.js":"17"},{"size":1344,"mtime":1616875423597,"results":"18","hashOfConfig":"19"},{"size":232,"mtime":1612986582144,"results":"20","hashOfConfig":"19"},{"size":9807,"mtime":1616683109201,"results":"21","hashOfConfig":"19"},{"size":5765,"mtime":1616875423595,"results":"22","hashOfConfig":"19"},{"size":4117,"mtime":1616683109198,"results":"23","hashOfConfig":"19"},{"size":1049,"mtime":1616683109204,"results":"24","hashOfConfig":"19"},{"size":3444,"mtime":1616683109199,"results":"25","hashOfConfig":"19"},{"size":172,"mtime":1616683118353,"results":"26","hashOfConfig":"19"},{"size":2688,"mtime":1616683109203,"results":"27","hashOfConfig":"19"},{"size":1230,"mtime":1616875769278,"results":"28","hashOfConfig":"19"},{"size":1573,"mtime":1616875775557,"results":"29","hashOfConfig":"19"},{"size":168,"mtime":1614283394719,"results":"30","hashOfConfig":"19"},{"size":473,"mtime":1614283394716,"results":"31","hashOfConfig":"19"},{"size":6128,"mtime":1616683109199,"results":"32","hashOfConfig":"19"},{"size":548,"mtime":1616683109202,"results":"33","hashOfConfig":"19"},{"size":5690,"mtime":1616683109197,"results":"34","hashOfConfig":"19"},{"size":826,"mtime":1616875423595,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1624kqg",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Zulfi/Documents/montly-budgeting-app/src/index.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/App.js",[],["73","74"],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/Transactions.js",[],["75","76"],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/Login.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/Create.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/MainCard.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/LinkBank.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/apis.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/ListAccounts.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Navbar.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/LoggedInNavbar.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Logout.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Error.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/ForgotPassword.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/Footer.js",[],"/Users/Zulfi/Documents/montly-budgeting-app/src/components/AddBank.js",["77","78"],"import React, { Component } from 'react';\nimport { PlaidLink } from 'react-plaid-link';\nimport { withRouter } from 'react-router-dom';\nimport api from '../apis';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport LoggedInNavbar from '../functional_components/LoggedInNavbar';\nimport MainCard from '../functional_components/MainCard';\n\nclass AddBank extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.getLocalStorage();\n\n        const url = '/LinkToken'\n\n        api.get(url)\n        .then(res => {\n            this.setState({\n                linkToken: res.data.link_token\n            });\n        })\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    getLocalStorage = () => {\n\n        if(sessionStorage.getItem('loggedIn') != null){\n\n            console.log('Mounting and setting local state');\n\n            const {accounts, access_token, email} = JSON.parse(sessionStorage.getItem('loggedIn'));\n\n            try {\n                this.state = {\n                    email: email,\n                    institution: '',\n                    accounts: accounts,\n                    accessToken: access_token,\n                    error: '',\n                    displayPlaidLink: false\n                    };   \n            } catch (error) {\n                this.props.history.push('/');\n            }\n        } else{\n\n            this.state = {\n                displayPlaidLink: false,\n                accounts: [],\n                error: ''\n             };\n\n            console.log('redirecting back to login page');\n\n            return this.props.history.push('/');\n        }\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            displayPlaidLink: true\n        });\n\n        console.log(this.state);\n    } \n\n\n    renderLink = () => {\n        return (\n            <>\n                <Typography variant=\"h6\">\n                        Add bank\n                </Typography>\n                <br/>\n                <PlaidLink\n                token= {this.state.linkToken}\n                onSuccess={this.onSuccess}\n                >\n                    Connect to bank\n                </PlaidLink>\n            </>\n        );\n    }\n\n    displayLink = () => {\n        if(this.state.displayPlaidLink){\n            return this.renderLink();\n        } \n        \n        else{\n            return this.addInstitution();\n        }\n    }\n\n    // Add bank \n\n    addInstitution = () => {\n        return(\n            <div>\n                {this.state.error.length > 0 &&\n                 <Alert severity=\"error\"> {this.state.error}</Alert>\n                }\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\" >\n                    <TextField id=\"institution\" label=\"Add bank\" value={this.state.institution} onChange={e => this.setState({institution: e.target.value})}/>\n                    <br/>\n                    <br/>\n                    <Button variant=\"outlined\" type=\"submit\">\n                        Add\n                    </Button>\n                </form>\n                <br/>\n            </div>\n        );\n    }\n\n    onSuccess = (token, metadata) => {\n        // Call Token Exchange Endpoint\n\n        const url = '/TokenExchange'\n\n        const publicToken = {\n            public_token : token\n        };\n\n        api({\n            method: 'post',\n            url: url,\n            data: publicToken\n        }).then((res) => {\n\n            this.setState({\n                accessToken: res.data.access_token\n            })\n\n            this.saveAccessToken(this.state.accessToken);\n        })\n    };\n\n    // api call to save access token to DB for a specific user\n    saveAccessToken = (accessToken) => {\n        const url = '/updateToken'\n\n        const req = {\n            email: this.state.email, \n            access_token: accessToken,\n            institution: this.state.institution\n        };\n\n        console.log(req)\n\n        api({\n            method: 'post',\n            url: url,\n            data: req\n        }).then((res) => {\n            console.log(res.data)\n\n            this.transactionData(res.data)\n        })\n    }\n\n    transactionData = (accessToken) => {\n\n        const url = '/TransactionDetails'\n\n        const req = accessToken;\n\n        api({\n            method: 'post',\n            url: url,\n            data: req\n        }).then((res) => {       \n            \n            console.log(res)\n            \n            this.setState({\n                accounts: res.data,\n                error: ''\n            })\n\n            const loggedIn = { access_token: accessToken, accounts: res.data, email: this.state.email, loggedIn: true }\n\n            sessionStorage.setItem('loggedIn', JSON.stringify(loggedIn));\n\n            this.props.history.push('/');\n\n        }).catch(err => {\n            this.setState({\n                error: 'Error logging in with account',\n            })\n        })\n    }\n\n\n    redirectToLogin(){\n        const loggedIn = { access_token: this.state.accessToken, accounts: this.state.accounts, loggedIn: true }\n\n        sessionStorage.setItem('loggedIn', JSON.stringify(loggedIn));\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n                <>\n                     <LoggedInNavbar/>\n                     <MainCard>\n                        <div className= \"Plaid\">\n                            { this.displayLink() }\n                        </div>\n                    </MainCard>\n                </>\n        );\n    }\n}\nexport default withRouter(AddBank);\n","/Users/Zulfi/Documents/montly-budgeting-app/src/functional_components/ListAccountsWrapper.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":40,"column":17,"nodeType":"87","endLine":40,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":53,"column":13,"nodeType":"87","endLine":53,"endColumn":17},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","no-global-assign","no-unsafe-negation"]